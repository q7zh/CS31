1.
int main()
load words
if no words are loaded
	write no words were loaded and return 0,
write how many rounds?
get the number of rounds
if rounds not positive
	write rounds must be positive and return 0,
repeatedly:
	write what round it is 
	get secret word
	write the length of secret word
	compute the number of tries by function manageOneRound
	write the number of tries
	calculate total
	calculate maximum
	calculate minimum
	write average, minimum and maximum

2.
int manageOneRound(const char words[][MAXWORDLEN+1], int nWords, int wordnum)
if the parameters are not valid
	return -1,
repeatedly:
	get probe word
	if the probe word is not a word of 4 to 6
		continue,
	if the probe word consists of lower case letters
		continue,
	if the probe word belongs to the wordlist
		continue,
	if the probe word is the right guess
		return the number of tries,
	repeatedly:
		if the character of the probe word is the same as the character which in the same position of the secret word
			increment the number of rocks,
	repeatedly:
		if the character of the probe word is a rock
			continue,
		repeatedly:
			if the character of the probe word is the same as that of the secret word
				increment the number of pebbles
				break,
	write the number of rocks and pebbles
	increment the number of tries
return the number of tries
